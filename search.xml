<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Linux netstat命令]]></title>
      <url>http://www.cevinjohnny.top/2017/02/23/Linux-netstat%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>Netstat 是一款命令行工具，可用于列出系统上所有的网络套接字连接情况，包括 tcp, udp 以及 unix 套接字，另外它还能列出处于监听状态（即等待接入请求）的套接字。如果你想确认系统上的 Web 服务有没有起来，你可以查看80端口有没有打开。以上功能使 netstat 成为网管和系统管理员的必备利器。</p>
<p>下面通过实例介绍一下各参数的用法：</p>
<h3 id="1、列出所有连接"><a href="#1、列出所有连接" class="headerlink" title="1、列出所有连接"></a>1、列出所有连接</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ netstat -a</div><div class="line"></div><div class="line">Active Internet connections (including servers)</div><div class="line">Proto Recv-Q Send-Q  Local Address          Foreign Address        (<span class="section">state</span>)</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">10.70</span><span class="number">.102</span><span class="number">.187</span><span class="number">.61221</span>    <span class="number">14.17</span><span class="number">.33</span><span class="number">.220</span>.http-alt  ESTABLISHED</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">10.70</span><span class="number">.102</span><span class="number">.187</span><span class="number">.61216</span>    <span class="number">14.17</span><span class="number">.33</span><span class="number">.220</span>.http-alt  ESTABLISHED</div><div class="line">...</div><div class="line">udp4       <span class="number">0</span>      <span class="number">0</span>  *<span class="number">.56081</span>                *.*</div><div class="line">udp6       <span class="number">0</span>      <span class="number">0</span>  *<span class="number">.60867</span>                *.*</div><div class="line">...</div><div class="line">Active Multipath Internet connections</div><div class="line">Proto/ID  Flags      Local Address          Foreign Address        (<span class="section">state</span>)</div><div class="line">icm6       <span class="number">0</span>      <span class="number">0</span>  *.*                    *.*</div><div class="line">Active LOCAL (UNIX) domain sockets</div><div class="line">Address          Type   Recv-Q Send-Q            Inode             Conn             Refs          Nextref Addr</div><div class="line">a64c790b5e982037 stream      <span class="number">0</span>      <span class="number">0</span>                <span class="number">0</span> a64c790b5e9819f7                <span class="number">0</span>                <span class="number">0</span> /var/run/mDNSResponder</div></pre></td></tr></table></figure>
<h3 id="2、只列出-TCP-或-UDP-协议的连接"><a href="#2、只列出-TCP-或-UDP-协议的连接" class="headerlink" title="2、只列出 TCP 或 UDP 协议的连接"></a>2、只列出 TCP 或 UDP 协议的连接</h3><p>使用 -t 选项列出 TCP 协议的连接：<br>使用 -u 选项列出 UDP 协议的连接：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">⇒ netstat -at</div><div class="line">Active Internet connections (including servers)</div><div class="line">Proto Recv-Q Send-Q  Local Address          Foreign Address        (<span class="section">state</span>)</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">192.168</span><span class="number">.1</span><span class="number">.103</span><span class="number">.52595</span>    <span class="number">10.6</span><span class="number">.11</span><span class="number">.104</span><span class="number">.28901</span>      SYN_SENT</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">192.168</span><span class="number">.1</span><span class="number">.103</span><span class="number">.52593</span>    <span class="number">14.17</span><span class="number">.33</span><span class="number">.220</span>.http-alt  ESTABLISHED</div><div class="line"> .....</div></pre></td></tr></table></figure>
<h3 id="3、禁用反向域名解析，加快查询速度"><a href="#3、禁用反向域名解析，加快查询速度" class="headerlink" title="3、禁用反向域名解析，加快查询速度"></a>3、禁用反向域名解析，加快查询速度</h3><p>默认情况下 netstat 会通过反向域名解析技术查找每个 IP 地址对应的主机名。这会降低查找速度。如果你觉得 IP 地址已经足够，而没有必要知道主机名，就使用 -n 选项禁用域名解析功能。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">⇒ netstat -ant</div><div class="line">Active Internet connections (including servers)</div><div class="line">Proto Recv-Q Send-Q  Local Address          Foreign Address        (<span class="section">state</span>)</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">10.70</span><span class="number">.102</span><span class="number">.187</span><span class="number">.61295</span>    <span class="number">14.17</span><span class="number">.33</span><span class="number">.220</span><span class="number">.8080</span>      ESTABLISHED</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">10.70</span><span class="number">.102</span><span class="number">.187</span><span class="number">.61294</span>    <span class="number">14.17</span><span class="number">.33</span><span class="number">.220</span><span class="number">.8080</span>      ESTABLISHED</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">10.70</span><span class="number">.102</span><span class="number">.187</span><span class="number">.61284</span>    <span class="number">14.17</span><span class="number">.33</span><span class="number">.220</span><span class="number">.80</span>        SYN_SENT</div><div class="line">tcp6       <span class="number">0</span>      <span class="number">0</span>  *<span class="number">.4433</span>                 *.*                    LISTEN</div></pre></td></tr></table></figure></p>
<h3 id="4、只列出监听状态下的链接"><a href="#4、只列出监听状态下的链接" class="headerlink" title="4、只列出监听状态下的链接"></a>4、只列出监听状态下的链接</h3><p>任何网络服务的后台进程都会打开一个端口，用于监听接入的请求。这些正在监听的套接字也和连接的套接字一样，也能被 netstat 列出来。使用 -l 选项列出正在监听的套接字。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">⇒ netstat -tnl</div><div class="line">Active Internet connections</div><div class="line">Proto Recv-Q Send-Q  Local Address          Foreign Address        (<span class="section">state</span>)</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">192.168</span><span class="number">.1</span><span class="number">.103</span><span class="number">.53228</span>    <span class="number">10.6</span><span class="number">.11</span><span class="number">.104</span><span class="number">.28901</span>      SYN_SENT</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">192.168</span><span class="number">.1</span><span class="number">.103</span><span class="number">.53227</span>    <span class="number">10.6</span><span class="number">.11</span><span class="number">.104</span><span class="number">.28901</span>      SYN_SENT</div><div class="line">tcp4       <span class="number">0</span>      <span class="number">0</span>  <span class="number">192.168</span><span class="number">.1</span><span class="number">.103</span><span class="number">.53226</span>    <span class="number">115.28</span><span class="number">.250</span><span class="number">.150</span><span class="number">.443</span>     ESTABLISHED</div></pre></td></tr></table></figure></p>
<p>现在我们可以看到处于监听状态的 TCP 端口和连接。如果你查看所有监听端口，去掉 -t 选项。如果你只想查看 UDP 端口，使用 -u 选项，代替 -t 选项。<br><em>注意：不要使用 -a 选项，否则 netstat 会列出所有连接，而不仅仅是监听端口。</em></p>
<h3 id="5、获取进程名、进程号以及用户ID"><a href="#5、获取进程名、进程号以及用户ID" class="headerlink" title="5、获取进程名、进程号以及用户ID"></a>5、获取进程名、进程号以及用户ID</h3><p>查看端口和连接的信息时，能查看到它们对应的进程名和进程号对系统管理员来说是非常有帮助的。举个栗子，Apache 的 httpd 服务开启80端口，如果你要查看 http 服务是否已经启动，或者 http 服务是由 apache 还是 nginx 启动的，这时候你可以看看进程名。<br>使用 -p 选项查看进程信息。<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ sudo netstat -nlpt</div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.1</span><span class="meta">.1</span>:<span class="number">53</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN <span class="number">1144</span>/dnsmasq</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">631</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN <span class="number">661</span>/cupsd</div><div class="line">tcp6 <span class="number">0</span> <span class="number">0</span> ::<span class="number">1</span>:<span class="number">631</span> :::* LISTEN <span class="number">661</span>/cupsd</div></pre></td></tr></table></figure></p>
<p>使用 -p 选项时，netstat 必须运行在 root 权限之下，不然它就不能得到运行在 root 权限下的进程名，而很多服务包括 http 和 ftp 都运行在 root 权限之下。<br>相比进程名和进程号而言，查看进程的拥有者会更有用。使用 -ep 选项可以同时查看进程名和用户名。<br><figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ sudo netstat -ltpe</div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State User Inode PID/Program name</div><div class="line">tcp<span class="number"> 0 </span>0 enlightened:domain *:* LISTEN root<span class="number"> 11090 </span>1144/dnsmasq</div><div class="line">tcp<span class="number"> 0 </span>0 localhost:ipp *:* LISTEN root<span class="number"> 9755 </span>661/cupsd</div><div class="line">tcp6<span class="number"> 0 </span>0 ip6-localhost:ipp [::]:* LISTEN root<span class="number"> 9754 </span>661/cupsd</div></pre></td></tr></table></figure></p>
<p>上面列出 TCP 协议下的监听套接字，同时显示进程信息和一些额外信息。<br>这些额外的信息包括用户名和进程的索引节点号。这个命令对网管来说很有用。<br><em>注意：假如你将 -n 和 -e 选项一起使用，User 列的属性就是用户的 ID 号，而不是用户名。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[识别当前运行的是哪种shell]]></title>
      <url>http://www.cevinjohnny.top/2017/02/22/%E8%AF%86%E5%88%AB%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E7%9A%84%E6%98%AF%E5%93%AA%E7%A7%8Dshell/</url>
      <content type="html"><![CDATA[<p><img src="http://blog-pic.qiniudn.com/17-2-22/74637677-file_1487768790491_c105.jpg" alt=""></p>
<p>shell有多种版本，最常见的一般是bash，有可能你用的是tcsh，也可能是Zshell（zsh），我本人用的就是zsh，原因呢，蛮简单的：好用（装B）。那么如何查看自己用的是哪一种shell呢？很简单，在终端的shell提示符后输出：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="variable">$0</span></div></pre></td></tr></table></figure></p>
<p>并按下RTURN键，shell就会显示你正在使用的shell名称。<br>这条命令的原理是shell将$0展示为正在运行程序的程序名。这条命令可能会显示如下输出：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$echo $0</div><div class="line">-bash</div></pre></td></tr></table></figure></p>
<p>也可能显示为：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$echo</span> <span class="variable">$0</span></div><div class="line"><span class="regexp">/bin/</span>bash</div></pre></td></tr></table></figure></p>
<p>反正我显示的是这样：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">myB<span class="built_in">log</span>|⇒ <span class="built_in">echo</span> <span class="variable">$0</span></div><div class="line">-zsh</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac端iTerms2实现“复制SSH渠道”]]></title>
      <url>http://www.cevinjohnny.top/2017/02/14/Mac%E7%AB%AFiTerms2%E5%AE%9E%E7%8E%B0%E2%80%9C%E5%A4%8D%E5%88%B6SSH%E6%B8%A0%E9%81%93%E2%80%9D/</url>
      <content type="html"><![CDATA[<p><img src="http://blog-pic.qiniudn.com/17-2-14/58029075-file_1487052499319_ae90.jpg" alt=""><br>本人在公司工作的时候使用的是Windows系统，在Windows系统下使用的软件是Xshell来登录跳板机。Xshell这个终端模拟软件的使用十分方便，建立了链接后，输入PIN+TOKEN即可成功链接，登录了跳板机之后，只需要右键当前窗口选择“复制SSH渠道”，即可实现复制当前登录的跳板机窗口。</p>
<p>Xsehll的方便之处在于只连接一次跳板机，之后就可以右键“复制SSH渠道”即可新打开一个链接好跳板机的窗口，不需要重复输入PIN+TOKEN，而Mac的终端并没有这样的功能。</p>
<p>下面来说一下如何在Mac终端里实现“复制SSH渠道”的功能：<br>首先说明一下，在Mac上我用的是iTerms2代替了终端，因为：<br>·iTerm2 比 Mac 默认的 Terminal 终端好用，配合 Zsh 效果更棒哦!<br>·iTerm2下载连接：<a href="http://www.iterm2.com/" target="_blank" rel="external">http://www.iterm2.com/</a><br>·选择iTerms2配色方案：<a href="https://github.com/altercation/solarized" target="_blank" rel="external">https://github.com/altercation/solarized</a><br>本人使用的是Argonaut，效果大概是下面这样子的：<br><img src="http://blog-pic.qiniudn.com/17-2-14/89060624-file_1487051673527_10c3d.png" alt=""></p>
<p>言归正传，在iTerms2中使用以下命令可以正常登录跳板机：<br>ssh username@host -p 36000<br>但是存在的弊病就是每次新开一个窗口就得重新输入PIN+TOKEN来登录跳板机。</p>
<p>如何实现类似Xshell的“复制SSH渠道”功能呢？<br>1、首先，保证这个目录的存在<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -<span class="selector-tag">p</span> ~/.ssh/cm_socket</div></pre></td></tr></table></figure></p>
<p>2、创建配置文件<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi ~/.ssh/cm_socket/<span class="built_in">config</span></div></pre></td></tr></table></figure></p>
<p>3、编辑config配置文件为以下内容：<br><figure class="highlight cos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Host *</div><div class="line">ControlMaster auto</div><div class="line">ControlPath ~/.ssh/cm_socket/<span class="built_in">%r</span>@<span class="built_in">%h</span>:<span class="built_in">%p</span></div></pre></td></tr></table></figure></p>
<p>4、重启终端</p>
<p>·注意点：如果没有奏效可能还需要对iTerms2做以下设置：Preference——Profiles——WorkingDirectory；选择reuse previous sessions’s directory</p>
<p>至此，第一次登录跳板机输入密码后，之后新开窗口登录跳板机就都不再需要密码了。这里还有技巧就是可以用快捷键cmd+t来新建会话窗口，然后设置一个快捷键来send一条命令来登录机器：例如设置fn+F1为一个快捷键，来实现向屏幕输出登录命令：ssh username@host -p 36000<br><img src="http://blog-pic.qiniudn.com/17-2-14/20063619-file_1487051336985_1386c.png" alt=""></p>
<p>5、然后使用快捷键 cmd+t 打开新的窗口，然后 fn+F1 将快捷命令输出的屏幕上，回车！你就会看到已经登录的跳板机！是不是比右键“复制会话”还要快呢！嘻嘻！</p>
<p>原理很简单，开一个ssh连接在后台放着，以后再有需要用到ssh到同样主机的时候，直接使用这个连接的socket文件，不用再创建连接了，同理，也不需要再进行用户身份验证。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac日式键盘的问题]]></title>
      <url>http://www.cevinjohnny.top/2017/02/10/Mac%E6%97%A5%E5%BC%8F%E9%94%AE%E7%9B%98%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p><img src="http://blog-pic.qiniudn.com/17-2-10/20803520-file_1486715028193_b5fe.jpg" alt=""><br>在日本购买或者选择代购MacBook的朋友，大多都是着眼于日币的低汇率，所以在日本购买苹果的产品是比较实惠的。本人也是入手了一款日本带回的MacBook pro，不过键盘是日式的，上面的萌萌的日文，还有不同寻常的标点符号位置着实让我蛋疼了一下。不过经过上网各路搜索查询解决方案和本人的实践，终于找了在Mac下涉及到win系统时，键盘标点符号位置不对这种情况的解决方案。 </p>
<h4 id="情形一"><a href="#情形一" class="headerlink" title="情形一 >>"></a>情形一 >></h4><hr>
<p>你安装的是OS X+Win双系统：<br>其实问题主要是出现在使用win的过程中，在Mac 的OS X系统下只要习惯一下标点符号的位置就好了，但是当你安装了双系统之后，进入Windows系统的时候会发现键盘上标点符号位置并不是标出来的样子。重点来啦！<br>讲了那么多废话，其实事项确定你的症状和我一样啦，哈哈哈…解决方案来啦！<br>（1）进入设备管理器<br>（2）展开键盘，右键选择“更新驱动程序软件”>>“浏览计算机以查找驱动程序软件”>>“从计算机的设备驱动程序列表中选取”>>去掉“显示兼容硬件”前面的勾>>左边栏往下拉到Toshiba选项，对应右边选择“Toshiba USB 109 Japanese  keyboard”>>更行驱动程序警告，一路点“是”就好了。<br>（3）打开“注册表编辑器”，打开方式；command+R，输入regedit回车<br>（4）HKEY_LOCAL_MACHINE >>SYSTEM>>ControlSet001>>Control>>Keyboard Layouts 选择所有最后两位是04的文件夹，右键Layout  File项“修改”，将内容改为kbdjpn.dll<br>（5）重启！duangduangduang！ 标点符号的位置全正确啦！ </p>
<h4 id="情形二"><a href="#情形二" class="headerlink" title="情形二 >>"></a>情形二 >></h4><hr>
<p>在Mac OS X下安装Win虚拟机，基本的方法跟情形一都一样。只有第（2）点不同：<br>（2）展开键盘，右键选择“更新驱动程序软件”>>“浏览计算机以查找驱动程序软件”>>“从计算机的设备驱动程序列表中选取”>>去掉“显示兼容硬件”前面的勾>>左边直接选择（标准键盘）选项，对应右边往上选择“Japanese  PS/2 Keyboard(106/109 Key)”>>更行驱动程序警告，一路点“是”就好了。 </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在北京收留了我的那个男孩]]></title>
      <url>http://www.cevinjohnny.top/2017/02/09/%E5%9C%A8%E5%8C%97%E4%BA%AC%E6%94%B6%E7%95%99%E4%BA%86%E6%88%91%E7%9A%84%E9%82%A3%E4%B8%AA%E7%94%B7%E5%AD%A9/</url>
      <content type="html"><![CDATA[<p>  <img src="http://blog-pic.qiniudn.com/17-2-10/13052277-file_1486658256035_2cdb.jpg" alt=""><br>本人对香水这种东西不是特别了解，喜不喜欢全凭感觉。喜欢上宝格丽的 Man Extrome香水是应为我的一位朋友，他对我来说真的是一位雪中送炭的朋友，就称他为WF。</p>
<p>  2015年我在北京的那段日子，我觉得最幸运的事情就是遇见了他。他让我感受到了一种非常微妙的感觉。年底因为我要回到学校完成我的毕业设计，所以急于将租来的房屋转租出去，没想到北京还真是个一年四季都不愁没有人租房的城市，到了年底了，想来是大家纷纷都要回家过年的节奏了，所以保险起见我提前了一周多将房屋外租的信息 Po 到了网上，万万没想到只用了三天的时间就有人定下来并表示想要尽快入住。说起那时候我租的房子，真是一个让我觉得心酸的房子，当初到北京的时候急于住下，而这地方到我的公司急需要走路二十分钟就到了，虽然是个只有两层的自建房，房屋的墙壁上有漏水过后留下的痕迹，但是基于价格便宜和距离公司距离很近的两个优点，我毫不犹豫的组了下来，可是万万没想到，这间屋子漏雨的情况比我想象中的要严重啊… 下起雨来的时候，我竟需要用盆子去接着从房顶上滴下的水，不然就会水漫金山了，工作上呢，又很多东西都不会，所以也就没那么顺心，回到家里还是这幅场景，躺在床上别提多心酸了，想说干什么非要来着破北京受这种气，吸这种霾啊。</p>
<p>  扯远了，言归正传。说到我那破房子就要转租出去了，于是乎在北京的最后一周我就要露宿街头了，而那时又正值“国库空亏”的时候，我荷包里那还有什么钱住酒店啊，我本打算着看能不能在我认识的那位朋友那儿借宿一周，可不料他说要去出差了，不太方便。正在这迫在眉睫的时候，我一朋友的群里组织说大家要不要去唱歌，于是乎我就去了，好吧，我就在这遇到了他。</p>
<p>  去的时候，只有他一人先到了，本想说就不应该来这么早，我又不认识他，显得多尴尬。不过东一句西一句的跟他聊着，倒也是觉得这个人蛮好聊的，人也很和善。群里说要来唱歌的其他人半天不来，于是我跟他就准备先把包房定了先唱着，这时候看到 KTV 里有一个活动，就是猜大小赢奖品的，只要来扫码关注某个公众号就给十个筹码。我跟他就在那个“赌局”上玩儿了起来，在这个过程里我感受到了他的童真，玩儿的时候真的特别开心，手舞足蹈的。游戏的结果都是意料中事，我跟他俩人加起来的20个筹码全输光了，于是我们也就准备去包房唱歌去。</p>
<p>  进入 KTV 包房，稍显尴尬，女服务员进来送麦的棉套，戏谑的对着我俩说，就你们俩大老爷们儿唱啊？他说“不行么？”，女服务员上下打量了我跟他一番，笑得很淫邪，说你们不是来唱歌的吧，他也乐了“那你说我俩来干嘛的？我俩大老爷们还能干嘛啊？”，女服务员呵呵笑了，他接着说“要干啥咱也是去开房啊，来 KTV 干嘛…”，我心想北京的服务员都够 open 的啊，也可能是见怪不怪了？没一会儿，几个盆友到了，点歌唱。我才发现原来他不怎么会唱歌，然后就看着盆友们唱，自己会的就跟着哼哼两句。 期间有一个盆友似乎很喜欢我唱歌的样子，我唱歌的时候老盯着我看（余光瞥见的），我看见他的时候他也是礼貌性的笑笑，他叫小明，人蛮好的。唱完歌小明问我回哪儿去？家在哪？我就说了我悲惨的遭遇，说准备找家青旅先住几天，WF 就说可以到他们家去蹭几天，反正他那地方过段时间也到期了，到期准备搬家，刚好可以撑到我离开北京，小明跟他很熟，说 WF 很靠谱的，去他那儿靠谱，说以前的哥们儿晚上去夜店玩晚了都去投靠他，因为他家离夜店近，家里地方也大，WF“大叔”还会好吃好喝招待着，特靠谱.. 我也就很不要脸的说，那我就叨扰几天啦..</p>
<p>  完了，把其他小伙伴送走，我跟小明还有 WF 仨人去撸串了，他们说带我去一家他们常去的一家特好吃的烤串儿店，撸串儿期间，小明跟我讲了很多 WF 的光荣事迹，在酒吧一旦喝醉酒容易发生打架之类的事情，曾经也是因为一言不合就跟人在酒吧大打出手，所以小明说每次去酒吧都会盯紧他，这时候我脑海里的这位 WF 是一个五大三粗的，有江湖气息的爷们儿，外带一点头脑简单的感觉，不过到后来才发现是个心思细腻的人.. 撸串儿结束，小明一再跟 WF 交代，好好照看我，别欺负我巴拉巴拉之类的玩笑话，WF 也是调侃地说，你把我当什么了，没事我欺负人做什么…</p>
<p>  后来当晚就去可 WF 家里休息，晚上就聊了很多，具体聊了什么我记不太清了，可能关于情史，可能关于微信群里的基友们。他说没想到我也能是个话唠，我想可能黑暗中，人很容易吐露自己的心声或者讲出一些平时不好意思说出来的话语吧。聊天是愉快的，大概聊到凌晨3点左右，迷糊中，他把手伸向了我的脖子下方，把我环过去抱住了，我就像一只毛绒玩具，没有动弹的在他怀里睡着了。</p>
<p>  之后的几天便是白天上班，晚上回他家里休息。我觉得叨扰别人几天也不大好意思，所以下班的时候都会买些水果或者小零食什么的跟他一起吃，期间他也会分享一些他收藏或者喜欢的视频一起看，我记得那段时间刚开始播芈月传，大家因为甄嬛传的缘故，对这部剧都是很期待的，所以晚上还有一件事情就是我跟他我在被窝里一起看芈月传…</p>
<p>  一切都显得很默契，也很开心，有一天晚上，也是刚睡下没一会儿，他突然又把我搂过去，冷不丁的冒出一句，你丫到底喜不喜欢我嘛..我是真有点儿懵，因为其实心里是觉得在这边住的这几天我是很舒服很自在的，也很喜欢他这个人，但是我不敢确定，我就傻逼似的问了一句，“你说啥？”，他说“没啥..” 现在回想可能当时俩人都是畏惧的吧，他也说过现在已经到了有点害怕恋爱的年纪了，感觉没有时间和精力去谈恋爱，上班太累了，在北京的生活也太不易了，似乎谈恋爱成了一件奢侈的事情，谁不敢承担这个风险。</p>
<p>  后来有一天晚上我们看芈月传的时候，我说特别饿，家里有没有可以吃的东西啊，他说没有，只有那种虾面哦，想吃自己去煮吧，我问他要不要一起吃，他说不了，晚上吃的蛮饱的。我就屁颠儿屁颠儿去煮了一碗面吃，完了回来接着看剧，他说你们公司进场加班，也蛮累的，你咋晚上饭都吃不饱，我说我就在公司点外卖吃啊，可能今天吃的早了所以饿了吧。这件事情过后的第二天，晚上九点左右吧，他微信我“怎么还没下班”，我说“我在地铁上了，马上到了，咋了？要带点什么回来么？”，他说“不用，你晚上不是不吃宵夜容易饿么，我给你买了炸鸡，你赶紧回来吃吧，再晚可就凉了”，当时心里真的TM 特别暖！心想难怪暖男款大家都喜欢咯…回说“那我带几瓶啤酒上来吧，啤酒配炸鸡，《星星》里不就这么干的么”，然后那天就是啤酒+炸鸡+美剧。也那天晚上我觉得这个人心思是细腻的，是暖心的。</p>
<p>  时间很快，我快要离开北京回成都学校了，他说要给我践行，叫上小明一起去酒吧喝酒。我说行。然后我临走的头天晚上，约好了去 KAI 吧喝酒。他那天刚好要加班，说加班结束直接去，让我下班了可以先去，或者回家把书包放下。小明说想要给他来个小惊喜，说咱俩密谋先见面不告诉他，完了再一起去公司找他，我说行。之后我跟小明先碰头之后，他就来了微信：”你在哪儿呢，我下班了，我过去找你“，我说”我刚下班儿，你在哪呢“，他：”我在回家路上了，都没吃饭，等你一起吃呢“，我心想坏了，我这都跟小明吃饭了，还想说带上吃的去他公司找他，这家伙都自己跑回家了，还要等我一起吃晚饭。我就立马说“我这就回家，你在家等我吧”也说了我吃过饭了，问他想要吃点什么我带回去，他显得不太高兴，你咋吃那么早。到家之后把吃的放他面前，小明在门外躲着没进门，他在里面不高兴了，说本来想跟你一起吃个晚饭的，你 tm 居然自己就吃了，这时候小明从门外冷不丁的跑出来，他看了一眼，显得有点不自然，说你俩下班先碰头啦？ 小明笑盈盈的说 surprise…好吧，我看出来他有点不高兴了，不过一闪而过，说“得得得，懒得吃饭了，喝酒去吧.”</p>
<p>  到了酒吧，他点了两打酒，我跟他还有小明三一起玩儿划拳，不过一会儿就有一个特别娘的家伙，就叫他“娘娘”吧，过来了。跟WF 说，“哥们儿，你看那边，我那哥们儿看上你啦，说你特帅，想找你聊聊..你的盆友就交给我，我帮你招待着，你过去跟我哥们儿打个照面吧.”接着就跟我还有小明以及一进酒吧就遇见的一个大叔聊了起来，娘娘说“我们来玩一个游戏吧，我猜你们是做什么职业的，猜错了我发就，猜对了你们喝，你们也猜我是做什么的，对了我喝，错了你们喝…”，我觉得我们没有拒绝的余地，他也就开始了，说“你！一看就是个 IT 男吧，搞 IT 的是吧”我弱弱的点点头，心想这妖怪还真会看面像啊..他接着说“我哥也是搞 IT 的，我一看就知道，哈哈，你输了，喝吧。下一个，你？是做销售的吧？ 不然就是什么导说员？”，小明说“我是做旅游的，也算沾边儿吧”，娘娘大笑“我又猜对了吧，你喝..”，然后就是那位我不认识的大叔，也被娘娘猜对了，我心里不禁对这位“娘娘”看面相的能力有几分佩服了。然后换我们猜他的职业，三人通通猜错，各自罚酒，他说“我啊，其实是导演。”“导演？”我们都表示很惊讶，没见过这么没男人味儿的导演啊，哈哈。小明问“啥导演啊？”，娘娘说“最近很多的真人秀知道吧，爸爸去哪儿，我是那个剧组的”，小明点点头说“哦… 你是器材导演吧？”，娘娘冷了一下说“哥们儿懂行啊..”，反正我在一边儿是看的啥也没明白，都是大神，除了我..</p>
<p>  那个我们一进酒吧就遇见的大叔，我一直以为他是跟 WF 或者小明认识的朋友，到后来我才知道压根都不认识，就是进酒吧混一起喝酒的罢了，这也是后来小明跟 WF 告诉我的。WF 过去俩天的时候，这位大叔表现出了对 WF 十分的关心，已在提醒我跟小明，说你们看好你们那位盆友啊，可别被别人给灌醉了，巴拉巴拉，WF 回来之后他也是很关心的问他没事吧，也是不断进酒碰杯，笑脸盈盈..色眯眯的看着 WF。玩到估计凌晨1点左右，喝了几轮酒，我们三准备撤了，最后那位大叔显得十分不舍，对 WF 说准备走啦？不玩儿啦？WF 说“对，我朋友明儿还要赶飞机，不玩儿啦”，大叔说“那再给我买三瓶酒吧。”我当时也没整明白怎么回事，出来之后问 WF说“你们跟刚才的大叔认识么？”，WF 笑笑说，不认识，我说“那你怎么还跟他很熟的样子，还给他买酒”，他又笑了，说，“你没混过夜场，你以后就知道了，他从一开始进来跟咱们聊天，跟我拉近乎，就 TM 是为了蹭我那几瓶酒而已，懂了吧，这种人我也懒得计较，几瓶酒嘛，想要爷就赏他咯”… 我目瞪口呆，心里还是那句话，我 TM 真是图样图森破啊…</p>
<p>  喝完酒，走开空空荡荡的北京三里屯儿，感觉这时候整个城市都是属于自己的，感觉特别的好，三个人嘻嘻哈哈的走大街上，看见有卖玫瑰的，上去买了啦一朵，说给你践行啦，顺便送你朵花儿…我哈哈大笑，你 TM 这是求爱呢？还送玫瑰，他回一句爱要不要，不要拉倒。我说喝了酒嘴里苦，想吃棒棒糖。他就跟小明说去给人买根棒棒糖呗，含着棒棒糖上了车，转场簋街吃宵夜去咯…</p>
<p>  到了簋街他点了一堆什么酸汤鱼啊，小龙虾什么的吧，吃了一半我都晕乎乎的了，感觉全程就是趴着吃的，各种丑照被他拍了个遍…</p>
<p>第二天我拿着行李，离开了北京，在成都的 Tex 上，我拿起手机给他发信息，问他有没有喜欢我，他回复“喜欢过”。很明显的过去式语法。我似乎懂了些什么，问，“那个基友群里的人，你有喜欢过的别人么？”，回“群里的就喜欢过你一个”____完</p>
]]></content>
    </entry>
    
  
  
</search>
